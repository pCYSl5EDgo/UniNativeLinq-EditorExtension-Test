name: TestRunner

on:
  push:
    branches:
    - master

jobs:
  editorTestJob:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp -f Tests.meta ../..
        rm -rf Tests
        rm -f Tests.meta
        rm -rf UNL/Settings
        cp -r ../Data~/Concat/Settings UNL/Settings
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath UniNativeLinq-EditorExtension-Test -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test(Concat)
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets
        cp -r "../Data~/$TEST/Tests" Tests
        cp ../../Tests.meta "../Data~/$TEST"
        cd ..
        /opt/Unity/Editor/Unity -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Concat

    - name: Clean & Create DLL
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -rf Tests
        rm -f Tests.meta
        rm -rf UNL/Settings
        cp -r "../Data~/$TEST/Settings" UNL/Settings
        /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath .. -executeMethod ExecuteMethods.CreateDll || echo ""
        cp -r "../Data~/$TEST/Tests" Tests
        cp ../../Tests.meta "../Data~/$TEST"
        /opt/Unity/Editor/Unity -batchmode -nographics -silent-crashes -logFile -projectPath .. -runEditorTests -editorTestsResultFile "../../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: SingleApi
    
    - run: ls -l artifact

    - uses: actions/upload-artifact@master
      with:
        name: test_results
        path: artifact

  reportResultJob:
    runs-on: ubuntu-latest
    needs: editorTestJob
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'
    
    - name: report result to slack(Concat)
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Concat

    - name: report result to slack(SingleApi)
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: SingleApi 