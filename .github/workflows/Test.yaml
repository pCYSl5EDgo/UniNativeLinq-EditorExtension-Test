name: TestRunner

on:
  push:
    branches:
    - master

jobs:
  editorTestJobJ:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Build unitypackage
      run: |
        cd artifact
        /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "../UniNativeLinq-EditorExtension-Test" -exportPackage "Assets/UNL" "UniNativeLinq-EditorExtension"

    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: unitypackage

    - name: Clean
      run: |
        rm -rf artifact
        mkdir artifact
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Where

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        ls -l artifact
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Where
    
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsJ

    - name: Clean
      run: |
        rm -rf artifact
        mkdir artifact
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: FULL

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy DLL
      run: cp -f "UniNativeLinq-EditorExtension-Test/Assets/UNL/UniNativeLinqDll.dll" "artifact/UniNativeLinqDll.dll"

    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: FULL

  reportResultJobJ:
    runs-on: ubuntu-latest
    needs: editorTestJobJ
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsJ
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Where

  editorTestJobI:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Union

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Union
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsI

  reportResultJobI:
    runs-on: ubuntu-latest
    needs: editorTestJobI
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsI
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Union

  editorTestJobH:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TryGetMin

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TryGetMin

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TryGetMax

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TryGetMax
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsH

  reportResultJobH:
    runs-on: ubuntu-latest
    needs: editorTestJobH
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsH
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TryGetMin

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TryGetMax

  editorTestJobG:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TryGetLast

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TryGetLast

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TryGetSingle

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TryGetSingle
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsG

  reportResultJobG:
    runs-on: ubuntu-latest
    needs: editorTestJobG
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsG
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TryGetLast

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TryGetSingle

  editorTestJobF:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TryGetElementAt

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TryGetElementAt

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TryGetFirst

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TryGetFirst
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsF

  reportResultJobF:
    runs-on: ubuntu-latest
    needs: editorTestJobF
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsF
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TryGetElementAt

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TryGetFirst

  editorTestJobE:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TakeWhile

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TakeWhile

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Sum

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Sum
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsE

  reportResultJobE:
    runs-on: ubuntu-latest
    needs: editorTestJobE
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsE
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TakeWhile

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Sum

  editorTestJobD:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Take

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Take

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: TakeLast

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: TakeLast
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsD

  reportResultJobD:
    runs-on: ubuntu-latest
    needs: editorTestJobD
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsD
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Take

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: TakeLast

  editorTestJobC:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: SkipLast

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: SkipLast

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: SkipWhile

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: SkipWhile
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsC

  reportResultJobC:
    runs-on: ubuntu-latest
    needs: editorTestJobC
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsC
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: SkipLast

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: SkipWhile

  editorTestJobB:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: SelectMany

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: SelectMany

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Skip

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Skip
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsB

  reportResultJobB:
    runs-on: ubuntu-latest
    needs: editorTestJobB
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsB
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: SelectMany

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Skip

  editorTestJobA:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Reverse

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Reverse

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Select

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Select
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_resultsA

  reportResultJobA:
    runs-on: ubuntu-latest
    needs: editorTestJobA
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_resultsA
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Reverse

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Select

  editorTestJob9:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Range

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Range

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Repeat

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Repeat
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results9

  reportResultJob9:
    runs-on: ubuntu-latest
    needs: editorTestJob9
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results9
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Range

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Repeat

  editorTestJob8:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: MinMax

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: MinMax

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: OrderBy

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: OrderBy
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results8

  reportResultJob8:
    runs-on: ubuntu-latest
    needs: editorTestJob8
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results8
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: MinMax

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: OrderBy

  editorTestJob7:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Intersect

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Intersect

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Join

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Join
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results7

  reportResultJob7:
    runs-on: ubuntu-latest
    needs: editorTestJob7
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results7
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Intersect

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Join

  editorTestJob6:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: GroupBy

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: GroupBy

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: GroupJoin

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: GroupJoin
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results6

  reportResultJob6:
    runs-on: ubuntu-latest
    needs: editorTestJob6
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results6
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: GroupBy

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: GroupJoin

  editorTestJob5:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Distinct

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Distinct

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Except

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Except
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results5

  reportResultJob5:
    runs-on: ubuntu-latest
    needs: editorTestJob5
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results5
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Distinct

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Except

  editorTestJob4:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Count

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Count

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: DefaultIfEmpty

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: DefaultIfEmpty
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results4

  reportResultJob4:
    runs-on: ubuntu-latest
    needs: editorTestJob4
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results4
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Count

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: DefaultIfEmpty

  editorTestJob3:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Concat

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Concat

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Contains

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Contains
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results3

  reportResultJob3:
    runs-on: ubuntu-latest
    needs: editorTestJob3
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results3
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Concat

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Contains

  editorTestJob2:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Any

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Any

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Average

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Average
    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results2

  reportResultJob2:
    runs-on: ubuntu-latest
    needs: editorTestJob2
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results2
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Any

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Average

  editorTestJob1:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Aggregate

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Aggregate

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: All

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: All

    - uses: actions/upload-artifact@master
      with:
        path: artifact
        name: test_results1

  reportResultJob1:
    runs-on: ubuntu-latest
    needs: editorTestJob1
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results1
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Aggregate

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: All

  editorTestJob0:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.9f1]
    steps:
    - name: Create Directory & Git Clone & Checkout & Remove Test Folder & Copy Files & Manual License Activation
      run: |
        mkdir artifact
        git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension-Test
        cd UniNativeLinq-EditorExtension-Test # UniNativeLinq-EditorExtension-Test
        git config --local user.name "pCYSl5EDgo"
        git config --local user.email "pCYSl5EDgo@yahoo.co.jp"
        git checkout $GITHUB_SHA
        cd Assets # UniNativeLinq-EditorExtension-Test/Assets
        cp Tests.meta ../../
        rm -f Tests.meta
        rm -rf Tests
        cd .. # UniNativeLinq-EditorExtension-Test
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher -k ${CYPHER_KEY} >> Unity_v2018.x.ulf
        /opt/Unity/Editor/Unity -logFile -manualLicenseFile Unity_v2018.x.ulf -batchmode -nographics -quit || exit 0
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}

    - name: Clean
      run: |
        cd UniNativeLinq-EditorExtension-Test/Assets # UniNativeLinq-EditorExtension-Test/Assets
        rm -f Tests.meta
        rm -rf Tests
        rm -rf UNL/Settings
        cp -a "../Data~/$TEST/Settings" UNL/
      env:
        TEST: Zip

    - name: Create DLL
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath "UniNativeLinq-EditorExtension-Test" -executeMethod ExecuteMethods.CreateDll || exit 0

    - name: Copy Tests Folder & Run Test
      run: |
        cd UniNativeLinq-EditorExtension-Test
        cp ../Tests.meta Assets/
        cp -a "Data~/$TEST/Tests" Assets
        ls -l Assets
        /opt/Unity/Editor/Unity -disable-assembly-updater -batchmode -nographics -silent-crashes -logFile -projectPath . -runEditorTests -editorTestsResultFile "../artifact/results_$TEST.xml" || exit 0
      env:
        TEST: Zip

    - uses: actions/upload-artifact@master
      with:
        name: test_results0
        path: artifact

  reportResultJob0:
    runs-on: ubuntu-latest
    needs: editorTestJob0
    steps:
    - run: mkdir artifact
    - uses: actions/download-artifact@master
      with:
        name: test_results0
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'

    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run "../artifact/results_$TEST.xml" ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA "Test $TEST" || INPUT_RESULT=$?
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat ../slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
        TEST: Zip

  pushJob:
    runs-on: ubuntu-latest
    needs:
    - reportResultJob0
    - reportResultJob1
    - reportResultJob2
    - reportResultJob3
    - reportResultJob4
    - reportResultJob5
    - reportResultJob6
    - reportResultJob7
    - reportResultJob8
    - reportResultJob9
    - reportResultJobA
    - reportResultJobB
    - reportResultJobC
    - reportResultJobD
    - reportResultJobE
    - reportResultJobF
    - reportResultJobG
    - reportResultJobH
    - reportResultJobI
    - reportResultJobJ
    steps:
    - uses: actions/checkout@master
    - run: echo $netrc > ~/.netrc
      env:
        netrc: ${{ secrets.netrc }}
    - run: git clone https://github.com/pCYSl5EDgo/UniNativeLinq-EditorExtension.git
    - name: Copy
      run: |
        rm -fr UniNativeLinq-EditorExtension/UNL/
        cp -fr Assets/UNL/ UniNativeLinq-EditorExtension/UNL/
    - name: Commit & Push
      run: |
        cd UniNativeLinq-EditorExtension
        git config --global user.email "pcysl5edgo@yahoo.co.jp"
        git config --global user.name "pCYSl5EDgo"
        git add .
        git commit -a -m "[update]DLL Update of $GITHUB_SHA"
        git push -v || exit 0
